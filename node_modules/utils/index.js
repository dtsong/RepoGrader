// link plotly api
var plotly = require('plotly')('peterpod','e876efj98k');
var fs = require('fs');

// helper function to get index of repo in repo array
function index(array, repo){
    for( i = 0; i< array.length; i++){
        if(array[i].repoID == repo){
            return i;
        }
    }
}
   exports.index = index; 

// helper function to determine if repo is already stored
function contains(array, repo){
    for( i = 0; i< array.length; i++){
        // is repo name in the array
        if(array[i].repoID == repo){
            return true;
        }
    }
    return false;
}
   exports.contains = contains; 

//merges json arrays. used to stitch JSON responses from each get request together
function extend(a, b){
    for(var key in b)
        if(b.hasOwnProperty(key))
            a[key] = b[key];
    return a;
 }
   exports.extend = extend; 

 /* creates data array for plotly commit Week graph 
    #commits / day
 */
 function generateCommitData(repositories, i){
    var new_commit = [0,0,0,0,0,0,0];
    if(repositories[i].commitActivity == undefined){
        return;
    }
    for (var ind = 0; ind < repositories[i].commitActivity.length; ind++ ){
      for(j = 0; j < repositories[i].commitActivity[ind].days.length; j++){
        new_commit[j] += repositories[i].commitActivity[ind].days[j];
      }
    }

    var data = [{
      x: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
      y: new_commit,
      type: "line"
    }];

    return data;
 }
  exports.generateCommitData = generateCommitData;


/* creates data array for plotly commitDate graph 
   #commits / week(date)
*/
 function generateCommitDateData(repositories, i){
    x = []; // weeks in date format
    y = []; // commits for the entire week

    for (ind = 0; ind < repositories[i].commitActivity.length; ind++){
      for(key in repositories[i].commitActivity[ind]){
          if( key == "total"){
            y[ind] = repositories[i].commitActivity[ind].total
          }
      }
      var unix_timestamp = repositories[i].commitActivity[ind].week;
      var date = new Date(unix_timestamp*1000);
      date = (date.getMonth() +1 ) +'/'+ date.getDate() + '/' + date.getFullYear();
      x[ind] = date;
    }

    var data =[{ 'x' : x, 'y': y, type:"bar"}];

    return data;
 }

 exports.generateCommitDateData = generateCommitDateData;

 /* pass in the array of repos, index of repo, data for graph,
    graph options, type of graph(commitActivity, etc) */
 function generateGraph(repositories, i, data, type, callback){
    /* generate plotly graph */
    // ensure unique filenames by using type
    var graphOptions = {filename: type + '/' + repositories[i].repoID, fileopt: "overwrite"};
    plotly.plot(data, graphOptions, function (err, msg) {
        if(err) return callback(err, msg);
        
        // return the url for the graph
        console.log(msg);
        return(callback(err , msg.url));
    });
 }

 exports.generateGraph = generateGraph;